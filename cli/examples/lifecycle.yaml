---
methods:
  lifecycle.ready:
    response: |
      function f(ctx, params) {
         ctx.setTimeout(function() {
          const result = { previous: 'initializing', state: 'inactive' }
          const msg = 'Post trigger for lifecycle.ready sent inactive lifecycle event'
          ctx.sendEvent('lifecycle.onInactive', result, msg)
        }, 500)

        ctx.setTimeout(function() {
        const result = { previous: 'inactive', state: 'foreground' }
          const msg = 'Post trigger for lifecycle.ready sent foreground lifecycle event'
          ctx.sendEvent('lifecycle.onForeground', result, msg)
          }, 1000)
        return null;
      }
  lifecycle.close:
    response: |
      function f(ctx, params) {
        ctx.setTimeout(function() {
          const result = { previous: 'foreground', state: 'inactive' }
          const msg = 'Post trigger for lifecycle.close sent inactive lifecycle event';
          ctx.sendEvent('lifecycle.onInactive', result, msg);
        }, 500)
        return null;
      }
